{"version":3,"sources":["race.js"],"names":["setRaceInterval","getReaceWrap","document","getElementById","getRace","rCtx","getContext","canvasWidth","width","canvasHeight","height","block","getColumns","getBody","body","score","getScore","speed","lvl","moveLeft","moveRight","directions","68","65","getRestartBtn","getPlayBtn","addBorders","fillStyle","fillRect","endGame","clearTimeout","font","textAlign","fillText","initCar","isCollision","classList","add","outputScore","clearRect","outputLvl","setScoreAndSpeed","setInterval","CarParts","col","row","this","draw","x","y","Car","car","carPosition","carDecoration","prototype","carCoords","drawCar","pcControllers","key","mobileControllers","target","contains","Bots","drawBots","botStep","moveBots","setCoordX","Math","floor","random","setMinAndMax","min","max","botsCreator","setBotCoords","outputBots","i","length","push","checkCollisions","getBotCoords","botX","botY","startGame","setTimeout","movement","addEventListener","e","direction","keyCode","style","display","remove","clearInterval"],"mappings":"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","sourcesContent":["/* get game wrap */\nvar getReaceWrap = document.getElementById('raceWrap');\n\n/* get canvas */\nvar getRace = document.getElementById('race');\nvar rCtx = getRace.getContext('2d');\n\n/* canvas size */\nvar canvasWidth = getRace.width;\nvar canvasHeight = getRace.height;\n\n/* size for one block. \nthrough this block we draw car and bot car, move the car, draw borders and indent*/\nvar block = 10;\n\n/* set cols and rows */\nvar getColumns = canvasWidth / block;\n\n/* get body for car movement */\nvar getBody = document.body;\n\n/* game score */\nvar score = 0;\n\n/* get game score and reset it */\nvar getScore = 0;\n\n/* game speed */\nvar speed = 20;\n\n/* game lvl */\nvar lvl = 1;\n\n/* in this var we set game speed, score and  lvl (function startGame) */\nvar setRaceInterval;\n\n/* mobile controls */\nvar moveLeft = document.getElementById('leftMove');\nvar moveRight = document.getElementById('rightMove');\n\n/* direction for movements */\nvar directions = {\n    68: 'right',\n    65: 'left',\n}\n\n/* restart / play  button */\nvar getRestartBtn = document.getElementById('restartRace');\nvar getPlayBtn = document.getElementById('startGame');\n\n\n/*  \n** GAME BORDERS\n*/\nfunction addBorders() {\n    rCtx.fillStyle = '#0770BB';\n\n    // borders by clockwise\n    rCtx.fillRect(0, 0, canvasWidth, block);\n    rCtx.fillRect(canvasWidth - block, 0, block, canvasHeight);\n    rCtx.fillRect(0, canvasHeight - block, canvasWidth, block);\n    rCtx.fillRect(0, 0, block, canvasHeight);\n}\naddBorders();\n\n\n/*  \n** END GAME\n*/\nfunction endGame() {\n    clearTimeout(setRaceInterval);\n    rCtx.font = '30px Montserrat';\n    rCtx.fillStyle = '#eee';\n    rCtx.textAlign = 'center';\n    rCtx.fillText('End Game', canvasWidth / 2, block * 10);\n    initCar.isCollision = true;\n    getRestartBtn.classList.add('show');\n}\n\n\n/*  \n**  SCORE\n*/\nfunction outputScore() {\n    rCtx.clearRect(block, block, canvasWidth - block * 2, block * 2);\n    rCtx.font = '15px Montserrat';\n    rCtx.fillStyle = '#EF9B0F';\n    rCtx.textAlign = 'left';\n    rCtx.fillText('score: ' + score, block + 5, block * 2.5);\n}\n\n\n/* \n** LVL\n*/\nfunction outputLvl() {\n    rCtx.clearRect(canvasWidth - block * 7, block, block * 5, block * 2.);\n    rCtx.font = '15px Montserrat';\n    rCtx.fillStyle = '#EF9B0F';\n    rCtx.textAlign = 'left';\n    rCtx.fillText('level: ' + lvl, canvasWidth - block * 7, block * 2.5)\n}\n\n\n/* \n** INCREASE SCORE AND CHANGE GAME SPEED\nspeed and lvl changes every 20 seconds\n*/\nfunction setScoreAndSpeed() {\n    var scoreInterval = setInterval(function () {\n        score += 5;\n        getScore += 5;\n        if (getScore >= 100) {\n            getScore = 0;\n            lvl++;\n            speed -= 2;\n            speed <= 2 ? speed = 2 : speed;\n            return speed;\n        }\n    }, 1000);\n}\n\n\n/* \n** CONSTRUCTOR CarParts (via this one we draw car)\n*/\nfunction CarParts(col, row) {\n    this.col = col;\n    this.row = row;\n\n    /* draw car */\n    this.draw = function () {\n        var x = this.col;\n        var y = this.row;\n        rCtx.fillRect(x, y, block * 3, block * 5);\n    }\n}\n\n\n/* \n** CONSTRUCTOR Car\n*/\nfunction Car() {\n\n    // set start position for car\n    this.x = canvasWidth / 2 - block;\n    this.y = canvasHeight - block * 8;\n\n    /* if collision happens (check function checkCollisions ) we change value to true \n    and ending game (check function endGame )\n    */\n    this.isCollision = false;\n\n    /* CREATE CAR VIA CONSTRUCTOR CarParts */\n    this.car = new CarParts(this.x, this.y, block * 3, block * 5);\n\n    /* GET CAR POSITION. chnage it when pressing controll buttons, coliision check. */\n    this.carPosition = function () {\n\n        // for setting new car position\n        var moveCar;\n\n        /* draw car when it change position */\n        rCtx.fillStyle = '#023560';\n        moveCar = new CarParts(this.x, this.y, block * 3, block * 5);\n        rCtx.fillRect(this.x, this.y, block * 3, block * 5);\n\n        // prototype for adding borders (just visual effect)\n        this.carDecoration();\n\n        // if car collided with a border\n        if (this.x > canvasWidth - block * 4 || this.x < block) {\n            this.isCollision = true;\n            endGame();\n        }\n    }\n}\n\n\n/* \n** RETURN COORDS FOR CHECKING COLIISION (check function checkCollisions) \n*/\nCar.prototype.carCoords = function () {\n    var carCoords = {\n        x: this.x,\n        y: this.y\n    };\n    return carCoords;\n}\n\n\n/*\n** CAR DECORATION \n*/\nCar.prototype.carDecoration = function () {\n    // car decoration white block\n    rCtx.fillStyle = '#eee';\n    rCtx.fillRect(this.x + block, this.y + block * 2, block, block * 2);\n\n    // car decoration white borders by clockwise\n    rCtx.fillRect(this.x, this.y, block * 3, 1);\n    rCtx.fillRect(this.x + block * 3 - 1, this.y, 1, block * 5);\n    rCtx.fillRect(this.x, this.y + block * 5 - 1, block * 3, 1);\n    rCtx.fillRect(this.x, this.y, 1, block * 5);\n}\n\n\n/*\n** DRAW CAR \n*/\nCar.prototype.drawCar = function () {\n    rCtx.fillStyle = '#023560';\n    this.car.draw();\n    this.carDecoration();\n}\n\n\n/* \n** CAR CONTROLLERS (PC)\n*/\nCar.prototype.pcControllers = function (key) {\n\n    // movement left / right\n    if (key == 'left') {\n        this.x -= block;\n        rCtx.clearRect(this.x + block, this.y, block * 3, block * 5);\n    } else { }\n\n    if (key == 'right') {\n        this.x += block;\n        rCtx.clearRect(this.x - block, this.y, block * 3, block * 5);\n    } else { }\n\n    // check car position \n    this.carPosition();\n}\n\n\n/* \n** CAR CONTROLLERS (MOBILE)\n*/\nCar.prototype.mobileControllers = function (target) {\n    if (target.classList.contains('move-left')) {\n        this.x -= block;\n        rCtx.clearRect(this.x + block, this.y, block * 3, block * 5);\n    } else { }\n\n    if (target.classList.contains('move-right')) {\n        this.x += block;\n        rCtx.clearRect(this.x - block, this.y, block * 3, block * 5);\n    } else { }\n\n    // check car position\n    this.carPosition();\n}\n\n\n/* \n** INIT CONSTRUCTOR Car \n*/\nvar initCar = new Car();\ninitCar.drawCar();\n\n\n/* \n** CONSTRUCTOR Bots \n*/\nfunction Bots(x, y) {\n\n    // x and y coords\n    this.x = x;\n    this.y = y;\n\n    // speed for y\n    this.speed = 1;\n\n    /* DRAW BOT */\n    this.drawBots = function () {\n\n        // bot car body\n        rCtx.fillStyle = '#333';\n        rCtx.fillRect(this.x, this.y, block * 3, block * 5);\n\n        // bot decoration (orange block)\n        rCtx.fillStyle = '#EF9B0F';\n        rCtx.fillRect(this.x + block, this.y + block * 2, block, block * 2);\n\n        // bot decoration (white borders)\n        rCtx.fillRect(this.x, this.y, block * 3, 1);\n        rCtx.fillRect(this.x + block * 3 - 1, this.y, 1, block * 5);\n        rCtx.fillRect(this.x, this.y + block * 5 - 1, block * 3, 1);\n        rCtx.fillRect(this.x, this.y, 1, block * 5);\n    }\n\n\n    /* RETURN BOT STEP FOR CHECKING COLLISIONS (check function checkCollisions)*/\n    this.botStep = function () {\n        var coords = {\n            x: this.x,\n            y: this.y\n        }\n        return coords;\n    }\n\n\n    /* BOT MOVEMENT */\n    this.moveBots = function () {\n\n        rCtx.clearRect(this.x, this.y, block * 3, block * 5);\n        this.y += this.speed;\n\n        // repeat animation when bot goes outside game border\n        if (this.y > canvasHeight) {\n\n            // setting y coords\n            this.y = block * 2;\n\n            /* setting x coords. Generating random number between 1 and 16 and multiply it  on 10.\n             because canvas width is 200 - 20 (borders from each side) available canvas width is 180. \n             So 160(max random number) + 20(bot width) = 180. \n             So now we sure that bot position will be correct  (from 10 to 160)  */\n            var setCoordX = Math.floor(Math.random() * (getColumns - 4)) + 1;\n            this.x = setCoordX * block;\n        }\n        this.drawBots();\n    }\n}\n\n\n/* \n** GENERATED NUMBERS BETWEEN MIN AND MAX\n*/\nfunction setMinAndMax(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\n// array for creating bots\nvar botsCreator = [];\n\n// array with coords for each bot\nvar setBotCoords = [\n    setMinAndMax(-10, -10),\n    setMinAndMax(2, 3),\n    setMinAndMax(14, 15)\n];\n\n// push bot to botsCreator array\nfunction outputBots() {\n    for (var i = 0; i < setBotCoords.length; i++) {\n        var x = Math.floor(Math.random() * (getColumns - 4)) + 1;\n        botsCreator.push(new Bots(x * block, setBotCoords[i] * 10, block * 3, block * 5));\n    }\n}\n\n\n/* \n** BOT MOVEMENT \n    (we can use methods from bot constructor because we \n    push new Bot Object for creating new bots )\n*/\nfunction moveBots() {\n    for (var i = 0; i < botsCreator.length; i++) {\n        botsCreator[i].moveBots();\n    }\n    // prevent destroy border by bot when they rich bottom\n    addBorders();\n}\n\n\n/* \n** CHEK FOR COLLISIONS\n*/\nfunction checkCollisions() {\n    /* car coords from CONSTRUCTOR Car.\n    type car.x for getting car X coords  */\n\n    var car = initCar.carCoords();\n    // array fro bot coords\n    var getBotCoords = [];\n\n    /* get bot coords (dynamic) */\n    for (var i = 0; i < setBotCoords.length; i++) {\n        getBotCoords.push(botsCreator[i].botStep());\n    }\n\n    /* get bot coords */\n    for (var key in getBotCoords) {\n        // coord X\n        var botX = getBotCoords[key].x;\n        // coord Y\n        var botY = getBotCoords[key].y;\n\n        /* if boot in diapasone check coord botX and car.x\n            Why 27 and 37\n                canvas height = 400;\n                car position = 320 from top\n                bot length = 50;\n\n            So: 270 + 50 = 320\n            So: 320 + 50 = 370\n\n            Checking will be strictly in needed coords    \n        */\n        if (botY >= block * 27 && botY <= block * 37) {\n\n            // if direct collision\n            if (botX == car.x) {\n                endGame();\n\n                // cheking left part of the car \n            } else if (botX + block * 2 == car.x) {\n                endGame();\n            } else if (botX + block == car.x) {\n                endGame();\n\n                // cheking right part of the car \n            } else if (botX - block * 2 == car.x) {\n                endGame();\n            } else if (botX - block == car.x) {\n                endGame();\n            } else { }\n        }\n        else { }\n    }\n}\n\n\n/* \n** CAR DRIVING BUTTONS (PC)\n*/\ngetBody.addEventListener('keydown', function (e) {\n    var direction = directions[e.keyCode];\n    if (initCar.isCollision == false && !getReaceWrap.classList.contains('not-active')) {\n        initCar.pcControllers(direction);\n    } else {\n        return false;\n    }\n});\n\n\n/* \n** CAR DRIVING BUTTONS (MOBILE)\n*/\nfunction mobileControllers(target) {\n    if (initCar.isCollision == false && !getReaceWrap.classList.contains('not-active')) {\n        initCar.mobileControllers(target);\n    } else {\n        return;\n    }\n}\n\nmoveLeft.addEventListener('click', function (e) {\n    mobileControllers(e.target);\n});\n\nmoveRight.addEventListener('click', function (e) {\n    mobileControllers(e.target);\n});\n\n\n/* \n** INIT GAME via nested setTimeout;\n*/\nfunction startGame() {\n    setRaceInterval = setTimeout(function movement() {\n        setRaceInterval = setTimeout(movement, speed);\n        moveBots();\n        checkCollisions();\n        outputScore();\n        outputLvl();\n    }, speed);\n}\n\n\n/* \n** PLAY GAME BUTTON\n*/\ngetPlayBtn.addEventListener('click', function () {\n    outputBots();\n    outputScore();\n    outputLvl();\n    setScoreAndSpeed()\n    startGame()\n    this.style.display = 'none';\n    getReaceWrap.classList.remove('not-active');\n});\n\n\n/* \n** RESTART GAME BUTTON\n*/\ngetRestartBtn.addEventListener('click', function () {\n    rCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    initCar = new Car();\n    initCar.drawCar();\n\n    botsCreator = [];\n    setBotCoords = [];\n    setBotCoords = [setMinAndMax(-10, -10), setMinAndMax(2, 3), setMinAndMax(14, 15)];\n    outputBots();\n\n    score = 0;\n    speed = 20;\n    getScore = 0;\n    lvl = 1;\n\n    clearInterval(setRaceInterval);\n    startGame();\n\n    this.classList.remove('show');\n});"],"file":"race.js"}